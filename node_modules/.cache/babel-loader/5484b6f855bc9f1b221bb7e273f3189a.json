{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navar\\\\Documents\\\\Henry\\\\Proyecto Individual\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\Paged\\\\Paged.jsx\";\nimport React from 'react';\nimport './Paged.modules.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paged = _ref => {\n  let {\n    countriesPerPage,\n    currentPage,\n    setCurrentPage,\n    allCountries,\n    totalPages\n  } = _ref;\n  const pageNumber = [];\n  let round = 0;\n\n  if (allCountries % 10 === 0) {\n    round = Math.ceil(allCountries / (countriesPerPage + 1)) + 1; //en el caso de que la cantidad de países sea múltiplo de 10 agrego una página\n  } else {\n    round = Math.ceil(allCountries / (countriesPerPage + 1));\n  } //Math.ceil redondea todos mis países, sobre los países que quiero por página\n\n\n  for (let i = 1; i <= round; i++) {\n    //Push a mi arreglo vacio para que tome el valor de esa itreción\n    pageNumber.push(i);\n  }\n\n  const prevClick = () => {\n    setCurrentPage(currentPage - 1);\n  };\n\n  const nextClick = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pageNumbers\",\n      children: pageNumber && pageNumber.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"number\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => totalPages(number),\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Paged;\nexport default Paged;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paged\");","map":{"version":3,"names":["React","Paged","countriesPerPage","currentPage","setCurrentPage","allCountries","totalPages","pageNumber","round","Math","ceil","i","push","prevClick","nextClick","map","number"],"sources":["C:/Users/navar/Documents/Henry/Proyecto Individual/PI-Countries-main/client/src/components/Paged/Paged.jsx"],"sourcesContent":["import React from 'react'\r\nimport './Paged.modules.css';\r\n\r\nconst Paged = ({ countriesPerPage,currentPage, setCurrentPage, allCountries, totalPages }) => {\r\n    const pageNumber = [];\r\n    let round=0;\r\n    if(allCountries%10 ===0){\r\n       round=Math.ceil(allCountries/(countriesPerPage+1)) +1; //en el caso de que la cantidad de países sea múltiplo de 10 agrego una página\r\n    } else {round=Math.ceil(allCountries/(countriesPerPage+1))}\r\n    \r\n    //Math.ceil redondea todos mis países, sobre los países que quiero por página\r\n   for (let i = 1; i <= round; i++) {\r\n        //Push a mi arreglo vacio para que tome el valor de esa itreción\r\n        pageNumber.push(i)   \r\n    }\r\n    const prevClick = () => {\r\n      setCurrentPage(currentPage - 1)\r\n    }\r\n  \r\n    const nextClick = () => {\r\n      setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pageNumbers\">\r\n        \r\n        {pageNumber && \r\n        pageNumber.map(number =>           \r\n            <li className=\"number\" key={number}>\r\n              <a onClick={()=> totalPages(number)}>{number}</a>\r\n            </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Paged;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,KAAK,GAAG,QAAgF;EAAA,IAA/E;IAAEC,gBAAF;IAAmBC,WAAnB;IAAgCC,cAAhC;IAAgDC,YAAhD;IAA8DC;EAA9D,CAA+E;EAC1F,MAAMC,UAAU,GAAG,EAAnB;EACA,IAAIC,KAAK,GAAC,CAAV;;EACA,IAAGH,YAAY,GAAC,EAAb,KAAmB,CAAtB,EAAwB;IACrBG,KAAK,GAACC,IAAI,CAACC,IAAL,CAAUL,YAAY,IAAEH,gBAAgB,GAAC,CAAnB,CAAtB,IAA8C,CAApD,CADqB,CACkC;EACzD,CAFD,MAEO;IAACM,KAAK,GAACC,IAAI,CAACC,IAAL,CAAUL,YAAY,IAAEH,gBAAgB,GAAC,CAAnB,CAAtB,CAAN;EAAmD,CAL+B,CAO1F;;;EACD,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,KAArB,EAA4BG,CAAC,EAA7B,EAAiC;IAC5B;IACAJ,UAAU,CAACK,IAAX,CAAgBD,CAAhB;EACH;;EACD,MAAME,SAAS,GAAG,MAAM;IACtBT,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;EACD,CAFD;;EAIA,MAAMW,SAAS,GAAG,MAAM;IACtBV,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;EACD,CAFD;;EAIF,oBACE;IAAA,uBACE;MAAI,SAAS,EAAC,aAAd;MAAA,UAEGI,UAAU,IACXA,UAAU,CAACQ,GAAX,CAAeC,MAAM,iBACjB;QAAI,SAAS,EAAC,QAAd;QAAA,uBACE;UAAG,OAAO,EAAE,MAAKV,UAAU,CAACU,MAAD,CAA3B;UAAA,UAAsCA;QAAtC;UAAA;UAAA;UAAA;QAAA;MADF,GAA4BA,MAA5B;QAAA;QAAA;QAAA;MAAA,QADJ;IAHF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAjCD;;KAAMf,K;AAmCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}