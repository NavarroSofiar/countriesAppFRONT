{"ast":null,"code":"import React from 'react';\nimport { GET_ALL_COUNTRIES, FILTER_BY_CONTINENT, ORDER_BY_NAME, GET_NAME_COUNTRIES, ORDER_BY_POPULATION, GET_COUNTRIES_BY_ID, POST_ACTIVITIES } from \"../actions\";\nconst initialState = {\n  countries: [],\n  allCountries: [],\n  detail: [],\n  activities: []\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_COUNTRIES:\n      return { ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n\n    case GET_NAME_COUNTRIES:\n      return { ...state,\n        countries: action.payload\n      };\n\n    case GET_COUNTRIES_BY_ID:\n      return { ...state,\n        detail: action.payload\n      };\n\n    case FILTER_BY_CONTINENT:\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === \"All\" ? allCountries : allCountries.filter(con => con.continent === action.payload);\n      return { ...state,\n        countries: continentFiltered\n      };\n\n    case ORDER_BY_NAME:\n      const sortedArr = action.payload === 'asc' ? state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        //descendente\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: sortedArr\n      };\n\n    case ORDER_BY_POPULATION:\n      const sortedArrP = action.payload === 'lower' ? state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        //descendente\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: sortedArrP\n      };\n\n    case POST_ACTIVITIES:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["React","GET_ALL_COUNTRIES","FILTER_BY_CONTINENT","ORDER_BY_NAME","GET_NAME_COUNTRIES","ORDER_BY_POPULATION","GET_COUNTRIES_BY_ID","POST_ACTIVITIES","initialState","countries","allCountries","detail","activities","rootReducer","state","action","type","payload","continentFiltered","filter","con","continent","sortedArr","sort","a","b","name","sortedArrP","population"],"sources":["C:/Users/navar/Documents/Henry/Proyecto Individual/PI-Countries-main/client/src/redux/reducer/index.js"],"sourcesContent":["import React from 'react'\r\nimport {GET_ALL_COUNTRIES, FILTER_BY_CONTINENT, ORDER_BY_NAME, GET_NAME_COUNTRIES, ORDER_BY_POPULATION, GET_COUNTRIES_BY_ID, POST_ACTIVITIES} from \"../actions\"\r\n\r\nconst initialState={\r\n  countries: [],\r\n  allCountries: [],\r\n  detail:[],\r\n  activities:[]\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n    case GET_ALL_COUNTRIES: \r\n    return{\r\n      ...state,\r\n      countries: action.payload,\r\n      allCountries: action.payload\r\n    }\r\n    case GET_NAME_COUNTRIES:\r\n      return{\r\n        ...state,\r\n        countries:action.payload\r\n      }\r\n\r\n    case GET_COUNTRIES_BY_ID:\r\n      return{\r\n        ...state,\r\n        detail: action.payload\r\n      }\r\n\r\n    case FILTER_BY_CONTINENT:\r\n      const allCountries = state.allCountries;\r\n      const continentFiltered = action.payload === \"All\" ? allCountries : allCountries.filter(con => con.continent === action.payload)\r\n      return{\r\n        ...state,\r\n        countries: continentFiltered\r\n    }\r\n    \r\n\r\n    case ORDER_BY_NAME:\r\n      const sortedArr = action.payload === 'asc'?\r\n          state.countries.sort(function(a,b){\r\n          if(a.name > b.name){\r\n            return 1;\r\n          }\r\n          if(b.name > a.name){\r\n            return -1;\r\n          }\r\n          return 0;\r\n          }) :\r\n          \r\n          state.countries.sort(function(a,b){ //descendente\r\n          if(a.name > b.name){\r\n            return -1;\r\n          }\r\n          if(b.name > a.name){\r\n            return 1;\r\n          }\r\n          return 0;\r\n          })\r\n          return{\r\n          ...state,\r\n          countries: sortedArr\r\n    }\r\n\r\n    case ORDER_BY_POPULATION:\r\n      const sortedArrP = action.payload === 'lower'?\r\n          state.countries.sort(function(a,b){\r\n          if(a.population > b.population){\r\n            return 1;\r\n          }\r\n          if(b.population > a.population){\r\n            return -1;\r\n          }\r\n          return 0;\r\n          }) :\r\n          state.countries.sort(function(a,b){ //descendente\r\n          if(a.population > b.population){\r\n            return -1;\r\n          }\r\n          if(b.population > a.population){\r\n            return 1;\r\n          }\r\n          return 0;\r\n          })\r\n          return{\r\n          ...state,\r\n          countries: sortedArrP\r\n    }\r\n\r\n    case POST_ACTIVITIES:\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}