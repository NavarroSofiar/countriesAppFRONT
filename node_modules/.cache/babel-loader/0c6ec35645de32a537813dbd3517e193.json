{"ast":null,"code":"import React from 'react';\nimport { GET_ALL_COUNTRIES, FILTER_BY_CONTINENT, ORDER_BY_NAME, GET_NAME_COUNTRIES, ORDER_BY_POPULATION, GET_ID_COUNTRIES } from \"../actions\";\nconst initialState = {\n  countries: [],\n  allCountries: []\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_COUNTRIES:\n      return { ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n\n    case GET_NAME_COUNTRIES:\n      return { ...state,\n        countries: action.payload\n      };\n\n    case GET_ID_COUNTRIES:\n      return { ...state,\n        countries: action.payload\n      };\n\n    case FILTER_BY_CONTINENT:\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === \"All\" ? allCountries : allCountries.filter(con => con.continent === action.payload);\n      return { ...state,\n        countries: continentFiltered\n      };\n\n    case ORDER_BY_NAME:\n      let sortedArr = action.payload === 'asc' ? state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        //descendente\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: sortedArr\n      };\n\n    case ORDER_BY_POPULATION:\n      let sortedArrP = action.payload === 'lower' ? state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        //descendente\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: sortedArrP\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["React","GET_ALL_COUNTRIES","FILTER_BY_CONTINENT","ORDER_BY_NAME","GET_NAME_COUNTRIES","ORDER_BY_POPULATION","GET_ID_COUNTRIES","initialState","countries","allCountries","rootReducer","state","action","type","payload","continentFiltered","filter","con","continent","sortedArr","sort","a","b","name","sortedArrP","population"],"sources":["C:/Users/navar/Documents/Henry/Proyecto Individual/PI-Countries-main/client/src/redux/reducer/index.js"],"sourcesContent":["import React from 'react'\r\nimport {GET_ALL_COUNTRIES, FILTER_BY_CONTINENT, ORDER_BY_NAME, GET_NAME_COUNTRIES, ORDER_BY_POPULATION, GET_ID_COUNTRIES} from \"../actions\"\r\n\r\nconst initialState={\r\n  countries: [],\r\n  allCountries: [],\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n    case GET_ALL_COUNTRIES: \r\n    return{\r\n      ...state,\r\n      countries: action.payload,\r\n      allCountries: action.payload\r\n    }\r\n    case GET_NAME_COUNTRIES:\r\n      return{\r\n        ...state,\r\n        countries:action.payload\r\n      }\r\n\r\n    case GET_ID_COUNTRIES:\r\n      return{\r\n        ...state,\r\n        countries: action.payload\r\n      }\r\n\r\n    case FILTER_BY_CONTINENT:\r\n      const allCountries = state.allCountries;\r\n      const continentFiltered = action.payload === \"All\" ? allCountries : allCountries.filter(con => con.continent === action.payload)\r\n      return{\r\n        ...state,\r\n        countries: continentFiltered\r\n    }\r\n    \r\n\r\n    case ORDER_BY_NAME:\r\n      let sortedArr = action.payload === 'asc'?\r\n          state.countries.sort(function(a,b){\r\n          if(a.name > b.name){\r\n            return 1;\r\n          }\r\n          if(b.name > a.name){\r\n            return -1;\r\n          }\r\n          return 0;\r\n          }) :\r\n          state.countries.sort(function(a,b){ //descendente\r\n          if(a.name > b.name){\r\n            return -1;\r\n          }\r\n          if(b.name > a.name){\r\n            return 1;\r\n          }\r\n          return 0;\r\n          })\r\n          return{\r\n          ...state,\r\n          countries: sortedArr\r\n    }\r\n\r\n    case ORDER_BY_POPULATION:\r\n      let sortedArrP = action.payload === 'lower'?\r\n          state.countries.sort(function(a,b){\r\n          if(a.population > b.population){\r\n            return 1;\r\n          }\r\n          if(b.population > a.population){\r\n            return -1;\r\n          }\r\n          return 0;\r\n          }) :\r\n          state.countries.sort(function(a,b){ //descendente\r\n          if(a.population > b.population){\r\n            return -1;\r\n          }\r\n          if(b.population > a.population){\r\n            return 1;\r\n          }\r\n          return 0;\r\n          })\r\n          return{\r\n          ...state,\r\n          countries: sortedArrP\r\n    }\r\n\r\n\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}